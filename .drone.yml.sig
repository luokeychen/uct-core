eyJhbGciOiJIUzI1NiJ9.workspace:
  base: /go
  path: src/github.com/tevjef/uct-core

pipeline:
  core:
    image: golang:1.6.3-alpine
    environment:
      - GOPATH=/go
    commands:
      - go version
      - export GOOS=linux
      - export GOARCH=amd64
      - apk update
      - apk --no-cache add ca-certificates openssl git
      - update-ca-certificates
      - export PATH=$PATH:$GOPATH/bin
      - wget -q https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-amd64.tar.gz
      - tar -xzf glide-v0.12.3-linux-amd64.tar.gz
      - mv linux-amd64/glide /usr/bin
      - glide install
      - export PATH=$PATH:$GOPATH/bin
      - go install -v github.com/tevjef/uct-core/ein
      - go install -v github.com/tevjef/uct-core/hermes
      - go install -v github.com/tevjef/uct-core/julia
      - go install -v github.com/tevjef/uct-core/scrapers/rutgers
      - go install -v github.com/tevjef/uct-core/scrapers/njit
      - go install -v github.com/tevjef/uct-core/jet
      - go install -v github.com/tevjef/uct-core/spike
    when:
      event: [push, pull_request, tag, deployment]

  common:
    image: library/docker:dind
    commands:
      - cp /go/bin/ein docker/ein/
      - cp /go/bin/spike docker/spike/
      - cp /go/bin/hermes docker/hermes/
      - cp /go/bin/julia docker/julia/
      - cp /go/bin/rutgers docker/rutgers-nk/
      - cp /go/bin/rutgers docker/rutgers-cm/
      - cp /go/bin/rutgers docker/rutgers-nb/
      - cp /go/bin/njit docker/njit/
      - cp /go/bin/jet docker/njit/
      - cp /go/bin/jet docker/rutgers-nk/
      - cp /go/bin/jet docker/rutgers-cm/
      - cp /go/bin/jet docker/rutgers-nb/

      - cp common/conf/config.toml docker/ein/
      - cp common/conf/config.toml docker/spike/
      - cp common/conf/config.toml docker/hermes/
      - cp common/conf/config.toml docker/julia/
      - cp common/conf/config.toml docker/rutgers-nk/
      - cp common/conf/config.toml docker/rutgers-cm/
      - cp common/conf/config.toml docker/rutgers-nb/
      - cp common/conf/config.toml docker/njit/
    when:
      branch: [master, staging]
      event: [push, tag, deployment]

  production:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - docker build -t tevjef/uct-core:ein -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/uct-core:spike -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/uct-core:hermes -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/uct-core:julia -f docker/julia/Dockerfile docker/julia
      - docker build -t tevjef/uct-core:rutgers-cm -f docker/rutgers-cm/Dockerfile docker/rutgers-cm
      - docker build -t tevjef/uct-core:rutgers-nb -f docker/rutgers-nb/Dockerfile docker/rutgers-nb
      - docker build -t tevjef/uct-core:rutgers-nk -f docker/rutgers-nk/Dockerfile docker/rutgers-nk
      - docker build -t tevjef/uct-core:njit -f docker/njit/Dockerfile docker/njit
      - docker build -t tevjef/uct-core:fluentd -f support/fluentd/Dockerfile support/fluentd
      - docker build -t tevjef/uct-core:fluentd-gen -f support/fluentd/gen/Dockerfile support/fluentd/gen
      - docker build -t tevjef/uct-core:nginx -f support/nginx/Dockerfile support/nginx
      - docker build -t tevjef/uct-core:nginx-gen -f support/nginx/gen/Dockerfile support/nginx/gen
      - docker build -t tevjef/uct-core:postgresql -f support/postgresql/Dockerfile support/postgresql
      - docker build -t tevjef/uct-core:telegraf -f support/telegraf/Dockerfile support/telegraf

      - docker push tevjef/uct-core:ein
      - docker push tevjef/uct-core:spike
      - docker push tevjef/uct-core:hermes
      - docker push tevjef/uct-core:julia
      - docker push tevjef/uct-core:rutgers-cm
      - docker push tevjef/uct-core:rutgers-nb
      - docker push tevjef/uct-core:rutgers-nk
      - docker push tevjef/uct-core:njit
      - docker push tevjef/uct-core:fluentd
      - docker push tevjef/uct-core:fluentd-gen
      - docker push tevjef/uct-core:nginx
      - docker push tevjef/uct-core:nginx-gen
      - docker push tevjef/uct-core:postgresql
      - docker push tevjef/uct-core:telegraf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master
      event: [push, tag, deployment]

  staging:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - docker build -t tevjef/uct-core:ein-staging -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/uct-core:spike-staging -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/uct-core:hermes-staging -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/uct-core:julia-staging -f docker/julia/Dockerfile docker/julia
      - docker build -t tevjef/uct-core:rutgers-cm-staging -f docker/rutgers-cm/Dockerfile docker/rutgers-cm
      - docker build -t tevjef/uct-core:rutgers-nb-staging -f docker/rutgers-nb/Dockerfile docker/rutgers-nb
      - docker build -t tevjef/uct-core:rutgers-nk-staging -f docker/rutgers-nk/Dockerfile docker/rutgers-nk
      - docker build -t tevjef/uct-core:njit-staging -f docker/njit/Dockerfile docker/njit
      - docker build -t tevjef/uct-core:fluentd-staging -f support/fluentd/Dockerfile support/fluentd
      - docker build -t tevjef/uct-core:fluentd-gen-staging -f support/fluentd/gen/Dockerfile support/fluentd/gen
      - docker build -t tevjef/uct-core:nginx-staging -f support/nginx/Dockerfile support/nginx
      - docker build -t tevjef/uct-core:nginx-gen-staging -f support/nginx/gen/Dockerfile support/nginx/gen
      - docker build -t tevjef/uct-core:postgresql-staging -f support/postgresql/Dockerfile support/postgresql
      - docker build -t tevjef/uct-core:telegraf-staging -f support/telegraf/Dockerfile support/telegraf

      - docker push tevjef/uct-core:ein-staging
      - docker push tevjef/uct-core:spike-staging
      - docker push tevjef/uct-core:hermes-staging
      - docker push tevjef/uct-core:julia-staging
      - docker push tevjef/uct-core:rutgers-cm-staging
      - docker push tevjef/uct-core:rutgers-nb-staging
      - docker push tevjef/uct-core:rutgers-nk-staging
      - docker push tevjef/uct-core:njit-staging
      - docker push tevjef/uct-core:fluentd-staging
      - docker push tevjef/uct-core:fluentd-gen-staging
      - docker push tevjef/uct-core:nginx-staging
      - docker push tevjef/uct-core:nginx-gen-staging
      - docker push tevjef/uct-core:postgresql-staging
      - docker push tevjef/uct-core:telegraf-staging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: staging
      event: [push, tag, deployment].paCigoZDFhZpc9fiFumqU8gOLN2F1T0rR8q-IhOq_Eg