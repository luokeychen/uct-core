eyJhbGciOiJIUzI1NiJ9.workspace:
  base: /go
  path: src/uct


pipeline:
  core:
    image: golang:1.6.3-alpine
    environment:
      - GOPATH=/go
    commands:
      - go version
      - export GOOS=linux
      - export GOARCH=amd64
      - cd /go/src/uct
      - apk update
      - apk --no-cache add ca-certificates openssl git
      - update-ca-certificates
      - export PATH=$PATH:$GOPATH/bin
      - wget -q https://github.com/Masterminds/glide/releases/download/v0.12.1/glide-v0.12.1-linux-amd64.tar.gz
      - tar -xzf glide-v0.12.1-linux-amd64.tar.gz
      - mv linux-amd64/glide /usr/bin
      - glide install
      - export PATH=$PATH:$GOPATH/bin
      - go install -v uct/ein
      - go install -v uct/hermes
      - go install -v uct/scrapers/rutgers
      - go install -v uct/servers/spike

  production:
    image: library/docker:dind
    commands:
      - cd /go/src/uct
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
      - docker build -t tevjef/uct-core:ein -f Dockerfile-ein .
      - docker build -t tevjef/uct-core:spike -f Dockerfile-spike .
      - docker build -t tevjef/uct-core:hermes -f Dockerfile-hermes .
      - docker build -t tevjef/uct-core:rutgers-cm -f Dockerfile-rutgers-cm .
      - docker build -t tevjef/uct-core:rutgers-nb -f Dockerfile-rutgers-nb .
      - docker build -t tevjef/uct-core:rutgers-nk -f Dockerfile-rutgers-nk .
      - docker build -t tevjef/uct-core:fluentd -f support/fluentd/Dockerfile support/fluentd
      - docker build -t tevjef/uct-core:fluentd-gen -f support/fluentd/gen/Dockerfile support/fluentd/gen
      - docker build -t tevjef/uct-core:nginx -f support/nginx/Dockerfile support/nginx
      - docker build -t tevjef/uct-core:nginx-gen -f support/nginx/gen/Dockerfile support/nginx/gen
      - docker build -t tevjef/uct-core:postgresql -f support/postgresql/Dockerfile support/postgresql
      - docker build -t tevjef/uct-core:telegraf -f support/telegraf/Dockerfile support/telegraf

      - docker push tevjef/uct-core:ein
      - docker push tevjef/uct-core:spike
      - docker push tevjef/uct-core:hermes
      - docker push tevjef/uct-core:rutgers-cm
      - docker push tevjef/uct-core:rutgers-nb
      - docker push tevjef/uct-core:rutgers-nk
      - docker push tevjef/uct-core:fluentd
      - docker push tevjef/uct-core:fluentd-gen
      - docker push tevjef/uct-core:nginx
      - docker push tevjef/uct-core:nginx-gen
      - docker push tevjef/uct-core:postgresql
      - docker push tevjef/uct-core:telegraf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
        branch: master

  staging:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
      - docker build -t tevjef/uct-core:staging-ein -f Dockerfile-ein .
      - docker build -t tevjef/uct-core:staging-spike -f Dockerfile-spike .
      - docker build -t tevjef/uct-core:staging-hermes -f Dockerfile-hermes .
      - docker build -t tevjef/uct-core:staging-rutgers-cm -f Dockerfile-rutgers-cm .
      - docker build -t tevjef/uct-core:staging-rutgers-nb -f Dockerfile-rutgers-nb .
      - docker build -t tevjef/uct-core:staging-rutgers-nk -f Dockerfile-rutgers-nk .
      - docker build -t tevjef/uct-core:staging-fluentd -f support/fluentd/Dockerfile support/fluentd
      - docker build -t tevjef/uct-core:staging-fluentd-gen -f support/fluentd/gen/Dockerfile support/fluentd/gen
      - docker build -t tevjef/uct-core:staging-nginx -f support/nginx/Dockerfile support/nginx
      - docker build -t tevjef/uct-core:staging-nginx-gen -f support/nginx/gen/Dockerfile support/nginx/gen
      - docker build -t tevjef/uct-core:staging-postgresql -f support/postgresql/Dockerfile support/postgresql
      - docker build -t tevjef/uct-core:staging-telegraf -f support/telegraf/Dockerfile support/telegraf

      - docker push tevjef/uct-core:staging-ein
      - docker push tevjef/uct-core:staging-spike
      - docker push tevjef/uct-core:staging-hermes
      - docker push tevjef/uct-core:staging-rutgers-cm
      - docker push tevjef/uct-core:staging-rutgers-nb
      - docker push tevjef/uct-core:staging-rutgers-nk
      - docker push tevjef/uct-core:staging-fluentd
      - docker push tevjef/uct-core:staging-fluentd-gen
      - docker push tevjef/uct-core:staging-nginx
      - docker push tevjef/uct-core:staging-nginx-gen
      - docker push tevjef/uct-core:staging-postgresql
      - docker push tevjef/uct-core:staging-telegraf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
        branch: staging

  buildtest:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
      - cp /go/bin/ein /go/src/uct/docker/ein/
      - cp /go/bin/spike /go/src/uct/docker/spike/
      - cp /go/bin/hermes /go/src/uct/docker/hermes/
      - cp /go/bin/rutgers /go/src/uct/docker/rutgers-nk/
      - cp /go/bin/rutgers /go/src/uct/docker/rutgers-cm/
      - cp /go/bin/rutgers /go/src/uct/docker/rutgers-nb/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/ein/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/spike/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/hermes/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/rutgers-nk/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/rutgers-cm/
      - cp /go/src/uct/common/conf/config.toml /go/src/uct/docker/rutgers-nb/

      - docker build -t tevjef/uct-core:staging-ein -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/uct-core:staging-spike -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/uct-core:staging-hermes -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/uct-core:staging-rutgers-cm -f docker/rutgers-cm/Dockerfile docker/rutgers-cm
      - docker build -t tevjef/uct-core:staging-rutgers-nb -f docker/rutgers-nk/Dockerfile docker/rutgers-nk
      - docker build -t tevjef/uct-core:staging-rutgers-nk -f docker/rutgers-nb/Dockerfile docker/rutgers-nb

      - docker run --rm tevjef/uct-core:staging-rutgers-nk || true
      - docker run --rm tevjef/uct-core:staging-rutgers-nb || true
      - docker run --rm tevjef/uct-core:staging-rutgers-cm || true
      - docker run --rm tevjef/uct-core:staging-hermes || true
      - docker run --rm tevjef/uct-core:staging-spike || true
      - docker run --rm tevjef/uct-core:staging-ein || true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
        branch: buildtest

  slack:
    webhook: https://hooks.slack.com/services/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
    channel: ci
    username: drone.mJsh6M3Ana7WJywXw0S1DHehtTN5ifHSRmk9GXYdfMA