// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

/*
Package model is a generated protocol buffer package.

It is generated from these files:
	model.proto

It has these top-level messages:
	University
	Subject
	Course
	Section
	Meeting
	Instructor
	Book
	Metadata
	Registration
	Semester
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Season int32

const (
	Season_fall   Season = 0
	Season_spring Season = 1
	Season_summer Season = 2
	Season_winter Season = 3
)

var Season_name = map[int32]string{
	0: "fall",
	1: "spring",
	2: "summer",
	3: "winter",
}
var Season_value = map[string]int32{
	"fall":   0,
	"spring": 1,
	"summer": 2,
	"winter": 3,
}

func (x Season) String() string {
	return proto.EnumName(Season_name, int32(x))
}
func (Season) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type University struct {
	Id                 int64           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name               string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Abbr               string          `protobuf:"bytes,3,opt,name=abbr" json:"abbr,omitempty"`
	HomePage           string          `protobuf:"bytes,4,opt,name=home_page,json=homePage" json:"home_page,omitempty"`
	RegistrationPage   string          `protobuf:"bytes,5,opt,name=registration_page,json=registrationPage" json:"registration_page,omitempty"`
	MainColor          string          `protobuf:"bytes,6,opt,name=main_color,json=mainColor" json:"main_color,omitempty"`
	AccentColor        string          `protobuf:"bytes,7,opt,name=accent_color,json=accentColor" json:"accent_color,omitempty"`
	TopicName          string          `protobuf:"bytes,8,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	Subjects           []*Subject      `protobuf:"bytes,9,rep,name=subjects" json:"subjects,omitempty"`
	AvailableSemesters []*Semester     `protobuf:"bytes,10,rep,name=available_semesters,json=availableSemesters" json:"available_semesters,omitempty"`
	Registrations      []*Registration `protobuf:"bytes,11,rep,name=registrations" json:"registrations,omitempty"`
	Metadata           []*Metadata     `protobuf:"bytes,12,rep,name=metadata" json:"metadata,omitempty"`
}

func (m *University) Reset()                    { *m = University{} }
func (m *University) String() string            { return proto.CompactTextString(m) }
func (*University) ProtoMessage()               {}
func (*University) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *University) GetSubjects() []*Subject {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *University) GetAvailableSemesters() []*Semester {
	if m != nil {
		return m.AvailableSemesters
	}
	return nil
}

func (m *University) GetRegistrations() []*Registration {
	if m != nil {
		return m.Registrations
	}
	return nil
}

func (m *University) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Subject struct {
	Id           int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UniversityId int64       `protobuf:"varint,2,opt,name=university_id,json=universityId" json:"university_id,omitempty"`
	Name         string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Number       string      `protobuf:"bytes,4,opt,name=number" json:"number,omitempty"`
	Season       string      `protobuf:"bytes,5,opt,name=season" json:"season,omitempty"`
	Year         string      `protobuf:"bytes,6,opt,name=year" json:"year,omitempty"`
	Hash         string      `protobuf:"bytes,7,opt,name=hash" json:"hash,omitempty"`
	TopicName    string      `protobuf:"bytes,8,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	Courses      []*Course   `protobuf:"bytes,9,rep,name=courses" json:"courses,omitempty"`
	Metadata     []*Metadata `protobuf:"bytes,10,rep,name=metadata" json:"metadata,omitempty"`
}

func (m *Subject) Reset()                    { *m = Subject{} }
func (m *Subject) String() string            { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()               {}
func (*Subject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Subject) GetCourses() []*Course {
	if m != nil {
		return m.Courses
	}
	return nil
}

func (m *Subject) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Course struct {
	Id        int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SubjectId int64       `protobuf:"varint,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	Name      string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Number    string      `protobuf:"bytes,4,opt,name=number" json:"number,omitempty"`
	Synopsis  string      `protobuf:"bytes,5,opt,name=synopsis" json:"synopsis,omitempty"`
	Hash      string      `protobuf:"bytes,6,opt,name=hash" json:"hash,omitempty"`
	TopicName string      `protobuf:"bytes,7,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	Sections  []*Section  `protobuf:"bytes,9,rep,name=sections" json:"sections,omitempty"`
	Metadata  []*Metadata `protobuf:"bytes,10,rep,name=metadata" json:"metadata,omitempty"`
}

func (m *Course) Reset()                    { *m = Course{} }
func (m *Course) String() string            { return proto.CompactTextString(m) }
func (*Course) ProtoMessage()               {}
func (*Course) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Course) GetSections() []*Section {
	if m != nil {
		return m.Sections
	}
	return nil
}

func (m *Course) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Section struct {
	Id          int64         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CourseId    int64         `protobuf:"varint,2,opt,name=course_id,json=courseId" json:"course_id,omitempty"`
	Number      string        `protobuf:"bytes,3,opt,name=number" json:"number,omitempty"`
	CallNumber  string        `protobuf:"bytes,4,opt,name=call_number,json=callNumber" json:"call_number,omitempty"`
	Max         int64         `protobuf:"varint,5,opt,name=max" json:"max,omitempty"`
	Now         int64         `protobuf:"varint,6,opt,name=now" json:"now,omitempty"`
	Status      string        `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	Credits     string        `protobuf:"bytes,8,opt,name=credits" json:"credits,omitempty"`
	TopicName   string        `protobuf:"bytes,9,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	Meetings    []*Meeting    `protobuf:"bytes,10,rep,name=meetings" json:"meetings,omitempty"`
	Instructors []*Instructor `protobuf:"bytes,11,rep,name=instructors" json:"instructors,omitempty"`
	Books       []*Book       `protobuf:"bytes,12,rep,name=books" json:"books,omitempty"`
	Metadata    []*Metadata   `protobuf:"bytes,13,rep,name=metadata" json:"metadata,omitempty"`
}

func (m *Section) Reset()                    { *m = Section{} }
func (m *Section) String() string            { return proto.CompactTextString(m) }
func (*Section) ProtoMessage()               {}
func (*Section) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Section) GetMeetings() []*Meeting {
	if m != nil {
		return m.Meetings
	}
	return nil
}

func (m *Section) GetInstructors() []*Instructor {
	if m != nil {
		return m.Instructors
	}
	return nil
}

func (m *Section) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

func (m *Section) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Meeting struct {
	Id        int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SectionId int64       `protobuf:"varint,2,opt,name=section_id,json=sectionId" json:"section_id,omitempty"`
	Room      string      `protobuf:"bytes,3,opt,name=room" json:"room,omitempty"`
	Day       string      `protobuf:"bytes,4,opt,name=day" json:"day,omitempty"`
	StartTime string      `protobuf:"bytes,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   string      `protobuf:"bytes,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Index     string      `protobuf:"bytes,7,opt,name=index" json:"index,omitempty"`
	Metadata  []*Metadata `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty"`
}

func (m *Meeting) Reset()                    { *m = Meeting{} }
func (m *Meeting) String() string            { return proto.CompactTextString(m) }
func (*Meeting) ProtoMessage()               {}
func (*Meeting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Meeting) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Instructor struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SectionId int64  `protobuf:"varint,2,opt,name=section_id,json=sectionId" json:"section_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *Instructor) Reset()                    { *m = Instructor{} }
func (m *Instructor) String() string            { return proto.CompactTextString(m) }
func (*Instructor) ProtoMessage()               {}
func (*Instructor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Book struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SectionId int64  `protobuf:"varint,2,opt,name=section_id,json=sectionId" json:"section_id,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Url       string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type Metadata struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UniversityId int64  `protobuf:"varint,2,opt,name=university_id,json=universityId" json:"university_id,omitempty"`
	SubjectId    int64  `protobuf:"varint,3,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	CourseId     int64  `protobuf:"varint,4,opt,name=course_id,json=courseId" json:"course_id,omitempty"`
	SectionId    int64  `protobuf:"varint,5,opt,name=section_id,json=sectionId" json:"section_id,omitempty"`
	MeetingId    int64  `protobuf:"varint,6,opt,name=meeting_id,json=meetingId" json:"meeting_id,omitempty"`
	Title        string `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Content      string `protobuf:"bytes,8,opt,name=content" json:"content,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type Registration struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UniversityId int64  `protobuf:"varint,2,opt,name=university_id,json=universityId" json:"university_id,omitempty"`
	Period       string `protobuf:"bytes,3,opt,name=period" json:"period,omitempty"`
	PeriodDate   int64  `protobuf:"varint,4,opt,name=period_date,json=periodDate" json:"period_date,omitempty"`
}

func (m *Registration) Reset()                    { *m = Registration{} }
func (m *Registration) String() string            { return proto.CompactTextString(m) }
func (*Registration) ProtoMessage()               {}
func (*Registration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type Semester struct {
	Year   int32  `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Season Season `protobuf:"varint,2,opt,name=season,enum=Season" json:"season,omitempty"`
}

func (m *Semester) Reset()                    { *m = Semester{} }
func (m *Semester) String() string            { return proto.CompactTextString(m) }
func (*Semester) ProtoMessage()               {}
func (*Semester) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*University)(nil), "University")
	proto.RegisterType((*Subject)(nil), "Subject")
	proto.RegisterType((*Course)(nil), "Course")
	proto.RegisterType((*Section)(nil), "Section")
	proto.RegisterType((*Meeting)(nil), "Meeting")
	proto.RegisterType((*Instructor)(nil), "Instructor")
	proto.RegisterType((*Book)(nil), "Book")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterType((*Registration)(nil), "Registration")
	proto.RegisterType((*Semester)(nil), "Semester")
	proto.RegisterEnum("Season", Season_name, Season_value)
}

var fileDescriptor0 = []byte{
	// 841 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0x26, 0x71, 0x12, 0xdb, 0x93, 0xa4, 0x0a, 0x06, 0x21, 0x03, 0x42, 0x6d, 0x03, 0x48, 0x15,
	0x88, 0x5c, 0x50, 0x89, 0x0b, 0x6e, 0x90, 0x28, 0x37, 0xbd, 0xa0, 0x20, 0x17, 0x2e, 0x91, 0xb5,
	0xb1, 0x97, 0x76, 0xc1, 0xf6, 0x46, 0xbb, 0xeb, 0xb6, 0x91, 0x78, 0x0b, 0x9e, 0x83, 0xc7, 0xe1,
	0x21, 0x78, 0x08, 0x74, 0xce, 0xec, 0x8f, 0x1d, 0x3b, 0x6d, 0x74, 0x4e, 0x7b, 0x37, 0xf3, 0xcd,
	0xec, 0x7a, 0xbf, 0x6f, 0x66, 0x76, 0x0d, 0xd3, 0x92, 0xe7, 0xb4, 0x58, 0x6d, 0x04, 0x57, 0x7c,
	0xf9, 0x8f, 0x07, 0xf0, 0x6b, 0xc5, 0xee, 0xa8, 0x90, 0x4c, 0x6d, 0xa3, 0x23, 0x18, 0xb2, 0x3c,
	0x1e, 0x9c, 0x0c, 0xce, 0xbc, 0x04, 0xad, 0x28, 0x82, 0x51, 0x45, 0x4a, 0x1a, 0x0f, 0x11, 0x09,
	0x13, 0x63, 0x6b, 0x8c, 0xac, 0xd7, 0x22, 0xf6, 0x2c, 0xa6, 0xed, 0xe8, 0x63, 0x08, 0x6f, 0x79,
	0x49, 0xd3, 0x0d, 0xb9, 0xa1, 0xf1, 0xc8, 0x04, 0x02, 0x0d, 0xfc, 0x8c, 0x7e, 0xf4, 0x25, 0xbc,
	0x2b, 0xe8, 0x0d, 0x93, 0x4a, 0x10, 0xc5, 0x78, 0x65, 0x93, 0xc6, 0x26, 0x69, 0xd1, 0x0d, 0x98,
	0xe4, 0x4f, 0x00, 0x4a, 0xc2, 0xaa, 0x34, 0xe3, 0x05, 0x17, 0xf1, 0xc4, 0x64, 0x85, 0x1a, 0xb9,
	0xd0, 0x40, 0x74, 0x0a, 0x33, 0x92, 0x65, 0xb4, 0x52, 0x2e, 0xc1, 0x37, 0x09, 0x53, 0x8b, 0xd9,
	0x14, 0xdc, 0x41, 0xf1, 0x0d, 0xcb, 0x52, 0x73, 0xf2, 0xc0, 0xee, 0x60, 0x90, 0x2b, 0x7d, 0xfc,
	0xcf, 0x20, 0x90, 0xf5, 0xfa, 0x0f, 0x9a, 0x29, 0x19, 0x87, 0x27, 0xde, 0xd9, 0xf4, 0xeb, 0x60,
	0x75, 0x6d, 0x81, 0xa4, 0x8d, 0x44, 0xdf, 0xc2, 0x7b, 0xe4, 0x8e, 0xb0, 0x82, 0xac, 0x0b, 0x9a,
	0x4a, 0x5a, 0x52, 0xa9, 0x50, 0xa2, 0x18, 0xcc, 0x82, 0x70, 0x75, 0xed, 0x90, 0x24, 0x6a, 0xb3,
	0x1a, 0x48, 0x46, 0xe7, 0x30, 0xef, 0xd2, 0x92, 0xf1, 0xd4, 0xac, 0x9a, 0xaf, 0x92, 0x0e, 0x9a,
	0xf4, 0x73, 0xa2, 0xcf, 0x21, 0x28, 0xa9, 0x22, 0x39, 0x51, 0x24, 0x9e, 0xb9, 0xaf, 0xfc, 0xe8,
	0x80, 0xa4, 0x0d, 0x2d, 0xff, 0x1e, 0x82, 0xef, 0x4e, 0xfb, 0xa8, 0x58, 0x9f, 0xc2, 0xbc, 0x6e,
	0x4b, 0x99, 0x62, 0x68, 0x68, 0x42, 0xb3, 0x1d, 0x78, 0xb9, 0xab, 0xa8, 0xd7, 0xa9, 0xe8, 0x07,
	0x30, 0xa9, 0xea, 0x72, 0x4d, 0x85, 0x2b, 0x9d, 0xf3, 0x34, 0x2e, 0x29, 0x91, 0xbc, 0x72, 0xd5,
	0x72, 0x9e, 0xde, 0x63, 0x4b, 0x49, 0x53, 0x1d, 0x63, 0x6b, 0xec, 0x96, 0xc8, 0x5b, 0x57, 0x10,
	0x63, 0xbf, 0xa9, 0x12, 0xa7, 0xe0, 0x67, 0xbc, 0x16, 0x92, 0x36, 0x85, 0xf0, 0x57, 0x17, 0xc6,
	0x4f, 0x1a, 0xbc, 0xa7, 0x0a, 0x1c, 0x56, 0xe5, 0xd5, 0x00, 0x26, 0x76, 0xe9, 0x23, 0x51, 0xf0,
	0x0c, 0xae, 0xa8, 0x3b, 0x45, 0x42, 0x87, 0x3c, 0x53, 0x8e, 0x8f, 0xb0, 0x73, 0xb6, 0x15, 0xdf,
	0x48, 0x26, 0x9d, 0x20, 0xad, 0xdf, 0xd2, 0x9f, 0x1c, 0xa4, 0xef, 0x3f, 0xd5, 0x88, 0x78, 0x08,
	0xd3, 0x21, 0x6d, 0x23, 0x5a, 0x20, 0x69, 0x23, 0x6f, 0xab, 0xc0, 0xff, 0xba, 0x2f, 0xec, 0x9a,
	0x47, 0x12, 0xe0, 0x70, 0x5a, 0x3d, 0x77, 0x0a, 0x04, 0x16, 0x40, 0x01, 0x76, 0x64, 0xbd, 0x1e,
	0xd9, 0x63, 0x98, 0x66, 0xa4, 0x28, 0xd2, 0x9e, 0x12, 0xa0, 0xa1, 0x2b, 0x9b, 0xb0, 0x00, 0xaf,
	0x24, 0x0f, 0x46, 0x08, 0x2f, 0xd1, 0xa6, 0x46, 0x2a, 0x7e, 0x6f, 0x24, 0x40, 0x04, 0x4d, 0xd3,
	0x40, 0x8a, 0xa8, 0x5a, 0x3a, 0xf6, 0xce, 0x8b, 0x62, 0xac, 0xbc, 0xa0, 0x39, 0xc3, 0x11, 0xb4,
	0x5d, 0xd1, 0xb8, 0x7b, 0x9a, 0x85, 0x4f, 0x68, 0x56, 0x52, 0xaa, 0x58, 0x75, 0xd3, 0xcc, 0x62,
	0x80, 0x6a, 0x18, 0x20, 0x69, 0x23, 0xd1, 0x57, 0x30, 0x65, 0x15, 0x8e, 0x56, 0x9d, 0x29, 0x2e,
	0x9a, 0xf1, 0x9b, 0xae, 0x2e, 0x5b, 0x2c, 0xe9, 0xc6, 0x51, 0x9f, 0xf1, 0x9a, 0xf3, 0x3f, 0xa5,
	0x9b, 0xbb, 0xf1, 0xea, 0x7b, 0xf4, 0x12, 0x8b, 0xf5, 0xf4, 0x9f, 0x1f, 0xd6, 0xff, 0xdf, 0x01,
	0xf8, 0xee, 0x20, 0x4f, 0xb6, 0xa0, 0x2d, 0x4d, 0xb7, 0x05, 0x2d, 0x62, 0x5b, 0x50, 0x70, 0x5e,
	0x36, 0x2d, 0xa8, 0x6d, 0x2d, 0x65, 0x4e, 0xb6, 0x4e, 0x75, 0x6d, 0x9a, 0x4d, 0x14, 0x11, 0x2a,
	0x55, 0xac, 0x6c, 0x6e, 0xcf, 0xd0, 0x20, 0xbf, 0x20, 0x10, 0x7d, 0x08, 0x01, 0xad, 0x72, 0x1b,
	0xb4, 0x3d, 0xe8, 0xa3, 0x6f, 0x42, 0xef, 0xc3, 0x98, 0x55, 0x39, 0x7d, 0x70, 0x35, 0xb0, 0x4e,
	0x8f, 0x57, 0x70, 0x98, 0xd7, 0x4f, 0x00, 0x3b, 0xd9, 0x5e, 0xc0, 0x6c, 0x7f, 0xb8, 0x96, 0xbf,
	0xc1, 0x48, 0xcb, 0xfb, 0xdc, 0xad, 0x90, 0x84, 0x62, 0xaa, 0x68, 0xf6, 0xb2, 0x8e, 0x96, 0xa9,
	0x16, 0x45, 0x23, 0x13, 0x9a, 0xcb, 0xff, 0x06, 0x10, 0x34, 0x34, 0x5e, 0x76, 0x41, 0xf6, 0x2f,
	0x0c, 0x6f, 0xff, 0xc2, 0xe8, 0x0d, 0xd3, 0x68, 0x6f, 0x98, 0xfa, 0x24, 0xc6, 0xfb, 0x24, 0xf4,
	0xdb, 0x66, 0x7b, 0x44, 0x87, 0xed, 0x9c, 0x84, 0x0e, 0xe9, 0x72, 0xf4, 0xbb, 0x1c, 0xf5, 0xac,
	0xf0, 0x4a, 0xe1, 0xf3, 0xd6, 0xce, 0x8a, 0x75, 0x97, 0x7f, 0xc1, 0xac, 0xfb, 0xa2, 0xbc, 0x8c,
	0x2e, 0x8e, 0xe8, 0x86, 0x0a, 0xc6, 0xf3, 0x66, 0xfe, 0xad, 0xa7, 0xe7, 0xdf, 0x5a, 0x29, 0x4a,
	0x49, 0x1d, 0x53, 0xb0, 0xd0, 0x0f, 0x88, 0x2c, 0xbf, 0x83, 0xa0, 0x79, 0xf2, 0xda, 0x07, 0x41,
	0x7f, 0x7b, 0xec, 0x1e, 0x84, 0xe3, 0xf6, 0xf1, 0xd0, 0x9f, 0x3d, 0xc2, 0xcb, 0xfd, 0xda, 0xb8,
	0xcd, 0x2b, 0xf2, 0xc5, 0x37, 0x30, 0xb1, 0x48, 0x14, 0xc0, 0xe8, 0x77, 0xbc, 0x58, 0x16, 0xef,
	0x44, 0x80, 0x8b, 0x36, 0x02, 0xe5, 0x58, 0x0c, 0x8c, 0x5d, 0x97, 0x25, 0x15, 0x8b, 0xa1, 0xb6,
	0xef, 0x19, 0xb2, 0x16, 0x0b, 0x6f, 0x3d, 0x31, 0x7f, 0x2e, 0xe7, 0xaf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x23, 0x94, 0x11, 0x90, 0xc8, 0x08, 0x00, 0x00,
}
